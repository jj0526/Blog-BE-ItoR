name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*gradle*','**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Gradle Build (test는 제외)
      - name: Build with Gradle
        run: ./gradlew build -x test

      # 도커 허브에 로그인
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_USER_TOKEN }}

      - name: Docker build & push
        run: |
          docker build -t ${{ secrets.DOCKER_USER_NAME }}/blog-dev -f ./Dockerfile-dev .
          docker push ${{ secrets.DOCKER_USER_NAME }}/blog-dev

  deploy:
    runs-on: ubuntu-latest
    needs: build
    # if: github.event_name == 'push' 테스트를 위해 주석 처리

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Copy deploy.sh to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_EC2_USER }}
          key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          port: 22
          source: "scripts/deploy.sh"
          target: "/home/ubuntu"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_EC2_USER }}
          key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            chmod +x /home/ubuntu/scripts/deploy.sh
            sh /home/ubuntu/scripts/deploy.sh
          debug: true
